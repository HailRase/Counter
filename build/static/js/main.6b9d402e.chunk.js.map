{"version":3,"sources":["CounterSettings.module.css","Counter.module.css","App.module.css","SuperButton.module.css","SuperButton.tsx","Counter.tsx","CounterSettings.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","SuperButton","callback","restProps","className","s","button","onClick","Counter","count","minValue","maxValue","changeCount","resetCount","errorValue","buttonDisabled","setValueMessage","counterBlock","style","padding","countBlock","fontSize","countStyleMax","countStyle","buttonBlock","opacity","disabled","CounterSettings","setSettings","changeMaxValue","changeMinValue","errorMinInputValue","errorMaxInputValue","setButtonDisabled","counterSettingBlock","changeValue","value","spanStyle","type","inputError","inputStyle","onChange","e","JSON","parse","currentTarget","setBlock","App","useState","setCount","setMaxValue","setMinValue","useEffect","getSetting","localStorage","setItem","stringify","countFromLS","getItem","newCountFromLS","maxValueFromLS","newMaxValueFromLS","minValueFromLS","newMinValueFromLS","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b9d402e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"counterSettingBlock\":\"CounterSettings_counterSettingBlock__3McqS\",\"changeValue\":\"CounterSettings_changeValue__6JFmi\",\"value\":\"CounterSettings_value__jtmYv\",\"spanStyle\":\"CounterSettings_spanStyle__2wL-M\",\"setBlock\":\"CounterSettings_setBlock__vcO20\",\"inputError\":\"CounterSettings_inputError__3D0mm\",\"inputStyle\":\"CounterSettings_inputStyle__3CP76\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counterBlock\":\"Counter_counterBlock__YE33H\",\"countBlock\":\"Counter_countBlock__wuyng\",\"countStyleMax\":\"Counter_countStyleMax__1bytA\",\"countStyle\":\"Counter_countStyle__3Hadn\",\"buttonBlock\":\"Counter_buttonBlock__1dRLn\",\"errorValue\":\"Counter_errorValue__1lE7b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2bgr1\",\"counterSettingBlock\":\"App_counterSettingBlock__wHXXC\",\"counterBlock\":\"App_counterBlock__265sG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__R2CF5\"};","import React, {DetailedHTMLProps, HTMLAttributes, useState} from 'react';\nimport s from './SuperButton.module.css'\nimport './App.module.css';\ntype DefaultButtonPropsType = DetailedHTMLProps<HTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n  callback?: () => void\n    disabled?:boolean\n}\n\nexport const SuperButton: React.FC<SuperButtonPropsType> = ({callback, ...restProps}) => {\n  return (\n    <div className={s.button}>\n        <button onClick={callback} {...restProps}></button>\n    </div>\n  );\n}\n\nexport default SuperButton;\n","import s from \"./Counter.module.css\";\r\nimport SuperButton from \"./SuperButton\";\r\nimport React, {useState} from \"react\";\r\n\r\ntype CounterPropsType = {\r\n    count: number | string\r\n    minValue: number\r\n    maxValue: number\r\n    changeCount: () => void\r\n    resetCount: () => void\r\n}\r\n\r\nexport const Counter: React.FC<CounterPropsType> = (\r\n    {\r\n        count,\r\n        minValue,\r\n        maxValue,\r\n        changeCount,\r\n        resetCount,\r\n    }\r\n) => {\r\n\r\n    const errorValue = maxValue === minValue || minValue < 0 || maxValue < 0 || minValue > maxValue\r\n    const buttonDisabled = count === maxValue || count === \"Press 'set'\"\r\n    const setValueMessage = count === \"Press 'set'\"\r\n\r\n    return (\r\n        <div className={s.counterBlock}>\r\n\r\n            <div style={setValueMessage ? {padding: \"52px 0 52px 0\"} : {}} className={s.countBlock}>\r\n                {\r\n                    errorValue\r\n                        ? <span className={s.errorValue}>Incorrect value</span>\r\n                        : <span style={setValueMessage ? {fontSize: \"42px\"} : {}}\r\n                                className={count === maxValue ? s.countStyleMax : s.countStyle}>{count}</span>\r\n                }\r\n\r\n            </div>\r\n            <div className={s.buttonBlock}>\r\n                <div><SuperButton style={buttonDisabled ? {opacity: \"0.5\"} : {}} disabled={buttonDisabled}\r\n                                  callback={changeCount}>inc</SuperButton></div>\r\n                <div><SuperButton style={count === \"Press 'set'\" ? {opacity: \"0.5\"} : {}}\r\n                                  disabled={count === \"Press 'set'\"}\r\n                                  callback={resetCount}>reset</SuperButton></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport s from './CounterSettings.module.css'\r\nimport SuperButton from \"./SuperButton\";\r\n\r\ntype CounterSettingsPropsType = {\r\n    count: number|string\r\n    minValue: number\r\n    maxValue: number\r\n    setSettings: () => void\r\n    changeMaxValue: (value: number) => void\r\n    changeMinValue: (value: number) => void\r\n}\r\n\r\nexport const CounterSettings: React.FC<CounterSettingsPropsType> = (\r\n    {\r\n        count,\r\n        minValue,\r\n        maxValue,\r\n        setSettings,\r\n        changeMaxValue,\r\n        changeMinValue,\r\n    }\r\n) => {\r\n\r\n    const onChangeMinHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        changeMinValue && changeMinValue(JSON.parse(e.currentTarget.value))\r\n    }\r\n    const onChangeMaxHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        changeMaxValue && changeMaxValue(JSON.parse(e.currentTarget.value))\r\n    }\r\n\r\n    const errorMinInputValue = maxValue <= minValue || minValue < 0\r\n    const errorMaxInputValue =  maxValue <= minValue\r\n    const setButtonDisabled = count !== \"Press 'set'\" || maxValue <= minValue || minValue < 0\r\n\r\n    return (\r\n        <div className={s.counterSettingBlock}>\r\n            <div className={s.changeValue}>\r\n                <div className={s.value}>\r\n                    <span className={s.spanStyle}>\r\n                        max value: <input type=\"number\"\r\n                                          className={errorMaxInputValue ? s.inputError : s.inputStyle}\r\n                                          value={maxValue}\r\n                                          onChange={onChangeMaxHandler}/>\r\n                    </span>\r\n                </div>\r\n                <div className={s.value}>\r\n                    <span className={s.spanStyle}>\r\n                        min value: <input type=\"number\"\r\n                                          className={errorMinInputValue ? s.inputError : s.inputStyle}\r\n                                          value={minValue} onChange={onChangeMinHandler}/>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div className={s.setBlock}>\r\n                <SuperButton style={setButtonDisabled? {opacity: \"0.5\"}:{}} disabled={setButtonDisabled} callback={setSettings}>set</SuperButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\nimport s from './App.module.css';\nimport {Counter} from \"./Counter\";\nimport {CounterSettings} from \"./CounterSettings\";\n\n\nfunction App() {\n\n    const [count, setCount] = useState<number | string>(0)\n    const [maxValue, setMaxValue] = useState<number>(0)\n    const [minValue, setMinValue] = useState<number>(0)\n\n    useEffect(() => getSetting(), [])\n    useEffect(() => localStorage.setItem('counterValue', JSON.stringify(count)), [count])\n\n    const changeCount = () => {\n        setCount(+count + 1)\n    }\n    const resetCount = () => {\n        setCount(minValue)\n    }\n\n    const setSetting = () => {\n        localStorage.setItem('maxValue', JSON.stringify(maxValue))\n        localStorage.setItem('minValue', JSON.stringify(minValue))\n        setCount(minValue)\n    }\n    const getSetting = () => {\n        let countFromLS = localStorage.getItem('counterValue')\n        if (countFromLS) {\n            let newCountFromLS = JSON.parse(countFromLS)\n            setCount(newCountFromLS)\n        }\n        let maxValueFromLS = localStorage.getItem('maxValue')\n        if (maxValueFromLS) {\n            let newMaxValueFromLS = JSON.parse(maxValueFromLS)\n            setMaxValue(newMaxValueFromLS)\n        }\n        let minValueFromLS = localStorage.getItem('minValue')\n        if (minValueFromLS) {\n            let newMinValueFromLS = JSON.parse(minValueFromLS)\n            setMinValue(newMinValueFromLS)\n        }\n    }\n\n    const changeMaxValue = (value: number) => {\n        setMaxValue(value)\n        setCount(\"Press 'set'\")\n    }\n    const changeMinValue = (value: number) => {\n        setMinValue(value)\n        setCount(\"Press 'set'\")\n    }\n\n\n    return (\n        <div className={s.app}>\n            <div className={s.counterSettingBlock}>\n                <CounterSettings\n                    count={count}\n                    minValue={minValue}\n                    maxValue={maxValue}\n                    setSettings={setSetting}\n                    changeMaxValue={changeMaxValue}\n                    changeMinValue={changeMinValue}\n                />\n            </div>\n            <div className={s.counterBlock}>\n                <Counter\n                    count={count}\n                    minValue={minValue}\n                    maxValue={maxValue}\n                    changeCount={changeCount}\n                    resetCount={resetCount}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}